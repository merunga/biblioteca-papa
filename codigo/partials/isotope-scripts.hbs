<script type="text/javascript">
  $(window).load(function(){
    $container = $('#{{page.isotope.containerId}}');
    $('.panel-collapse').on('shown.bs.collapse', function () {
      $container.isotope('layout')
    });
    $('.panel-collapse').on('hidden.bs.collapse', function () {
      $container.isotope('layout')
    }); 
  });

  $(document).ready(function(){
    // quick search regex
    var qsRegex;

    var filter = function() {
      return qsRegex ? $(this).text().match( qsRegex ) : true;
    };
    
    // init Isotope
    var $container = $('#{{page.isotope.containerId}}').isotope({
      "columnWidth": 200,
      "itemSelector": "{{page.isotope.itemSelector}}",
      filter: filter
    });

    // use value of search field to filter
    var $variedadSearch = $('#variedad-search').keyup( debounce( function() {
      qsRegex = new RegExp( $variedadSearch.val(), 'gi' );
      $container.isotope({filter: filter});
    }, 200 ) );

    $('#filter-ALL').on('click',function() {
      $('#variedad-search').val('');
      qsRegex = undefined;
      $container.isotope({ filter: filter });  
    });

    {{#each page.filterBy}}
      {{#eachCollectFieldValue ../page ../page.isotope.itemsField this}}
      $('{{slugifyEach this (concat "#filter-" ../this "-") }}').on('click',function() {
        $('#variedad-search').val('');
        $container.isotope({ filter: '.{{concat ../this "-" (slugify this)}}' });  
      });
      {{/eachCollectFieldValue}}
    {{/each}}

    
  });

  // debounce so filtering doesn't happen every millisecond
  function debounce( fn, threshold ) {
    var timeout;
    return function debounced() {
      if ( timeout ) {
        clearTimeout( timeout );
      }
      function delayed() {
        fn();
        timeout = null;
      }
      timeout = setTimeout( delayed, threshold || 100 );
    }
  }
</script>